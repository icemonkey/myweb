python生态工具

python工作环境管理
pyenv安装：
git clone https://github.com/pyenv/pyenv ~/.pyenv
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
echo 'eval "$(pyenv init -)"' >> ~/.bash_profile
source ~/.bash_profile
pyenv install -v 3.6.0
pyenv install -v 2.7.13
pyenv versions
pyenv global 3.6.0
pyenv uninstall 

virtualenv管理项目
git clone https://github.com/yyuu/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bash_profile
source  ~/.bash_profile
pyenv help virtualenv
pyenv virtualenv 2.7.13 first_project
pyenv virtualenv 2.7.13 second_project
pyenv virtualenvs
pyenv activate first_project
pyenv deactivate
pyenv virtualenv-delete first_project



文本处理
1.统计apache日志pv uv
#!/root/.pyenv/shims/python
# coding = utf-8
from __future__ import print_function

ips = []
with open('/var/log/httpd/access_log') as f:
    for line in f:
        ips.append(line.split()[0])


print ("PV is {0}".format(len(ips)))
print ("UV is {0}".format(len(set(ips))))


2.统计资源热度
#!/root/.pyenv/shims/python
# coding = utf-8
from __future__ import print_function
from collections import Counter

c = Counter()
with open('/var/log/httpd/access_log') as f:
    for line in f:
        c[line.split()[6]] += 1

for k in xrange(len(c.most_common(10))):
    print ("Top {0} ,count {1} , url {2}" .format(k,c.most_common(10)[k][1],c.most_common(10)[k][0]))
#print ("Popular resource : {0}" .format(c.most_common(10)))


3.统计apache状态码40x,50x
#!/root/.pyenv/shims/python
# coding = utf-8
from __future__ import print_function

d = {}
with open('/var/log/httpd/access_log') as f:
    for line in f:
        key = line.split()[8]
        d.setdefault(key,0)
        d[key] += 1

sum_requests = 0
error_requests = 0
for key, val in d.iteritems():
    if int(key) >= 400:
        error_requests += val
    sum_requests += val
print ('error rate: {0:.2f}%'.format(error_requests * 100.0 / sum_requests))



系统管理
1.文件处理
#!/root/.pyenv/shims/python
# coding = utf-8
from __future__ import print_function
import os
import sys


def main():
    sys.argv.append("")
	filename = sys.argv[1]
	if not os.path.isfile(filename):
	    raise SystemExit(filename + ' does not exists')
	if not os.path.access(filename,os.R_OK):
	    os.chmoe(filename, 0777)
	else:
	    whith open(filename) as f:
		    print(f.read())
			
if __name__ == '__main__'
    main()




















